diff --git a/gr-dtv/lib/dvbt/dvbt_bit_inner_deinterleaver_impl.cc b/gr-dtv/lib/dvbt/dvbt_bit_inner_deinterleaver_impl.cc
index bf7613a..c1e83c5 100644
--- a/gr-dtv/lib/dvbt/dvbt_bit_inner_deinterleaver_impl.cc
+++ b/gr-dtv/lib/dvbt/dvbt_bit_inner_deinterleaver_impl.cc
@@ -135,7 +135,12 @@ namespace gr {
 
       // First index of d_b is Bit interleaver number
       // Second index of d_b is the position inside Bit interleaver
+      #ifdef _MSC_VER
+      unsigned char **d_b = (unsigned char **)(alloca(sizeof(unsigned char *)*d_v));
+      for (int i = 0; i < d_v; i++) d_b[i] = (unsigned char *)alloca(d_bsize);
+      #else
       unsigned char d_b[d_v][d_bsize];
+      #endif
 
       for (int bcount = 0; bcount < bmax; bcount++) {
         for (int w = 0; w < d_bsize; w++) {
diff --git a/gr-dtv/lib/dvbt/dvbt_bit_inner_interleaver_impl.cc b/gr-dtv/lib/dvbt/dvbt_bit_inner_interleaver_impl.cc
index 0ab3003..ae424c1 100644
--- a/gr-dtv/lib/dvbt/dvbt_bit_inner_interleaver_impl.cc
+++ b/gr-dtv/lib/dvbt/dvbt_bit_inner_interleaver_impl.cc
@@ -136,7 +136,12 @@ namespace gr {
 
       // First index of d_b is Bit interleaver number
       // Second index of d_b is the position inside the Bit interleaver
+      #ifdef _MSC_VER
+      unsigned char **d_b = (unsigned char **)(alloca(sizeof(unsigned char *)*d_v));
+      for (int i = 0; i < d_v; i++) d_b[i] = (unsigned char *)alloca(d_bsize);
+      #else
       unsigned char d_b[d_v][d_bsize];
+      #endif
 
       for (int bcount = 0; bcount < bmax; bcount++) {
         for (int i = 0; i < d_bsize; i++) {
diff --git a/gr-dtv/lib/dvbt/dvbt_ofdm_sym_acquisition_impl.cc b/gr-dtv/lib/dvbt/dvbt_ofdm_sym_acquisition_impl.cc
index 84b20f9..0e6a148 100644
--- a/gr-dtv/lib/dvbt/dvbt_ofdm_sym_acquisition_impl.cc
+++ b/gr-dtv/lib/dvbt/dvbt_ofdm_sym_acquisition_impl.cc
@@ -109,8 +109,13 @@ namespace gr {
       int low, size;
 
       // Array to store peak positions
+      #ifdef _MSC_VER
+      int *peak_pos = (int *)alloca(sizeof(int)*d_fft_length);
+      float *d_phi = (float *)alloca(sizeof(float *)*d_fft_length);
+      #else
       int peak_pos[d_fft_length];
       float d_phi[d_fft_length];
+      #endif
 
       // Calculate norm
       low = lookup_stop - (d_cp_length + d_fft_length - 1);
diff --git a/gr-dtv/lib/dvbt/dvbt_reed_solomon.cc b/gr-dtv/lib/dvbt/dvbt_reed_solomon.cc
index 6277350..d728757 100644
--- a/gr-dtv/lib/dvbt/dvbt_reed_solomon.cc
+++ b/gr-dtv/lib/dvbt/dvbt_reed_solomon.cc
@@ -245,6 +245,15 @@ namespace gr {
     int
     dvbt_reed_solomon::rs_decode(unsigned char *data, unsigned char *eras, const int no_eras)
     {
+      #ifdef _MSC_VER
+      unsigned char *sigma = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *b = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *T = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *reg = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *root = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *loc = (unsigned char *)alloca(2 * d_t + 1);
+      unsigned char *omega = (unsigned char *)alloca(2 * d_t);
+      #else
       unsigned char sigma[2 * d_t + 1];
       unsigned char b[2 * d_t + 1];
       unsigned char T[2 * d_t + 1];
@@ -252,6 +261,7 @@ namespace gr {
       unsigned char root[2 * d_t + 1];
       unsigned char loc[2 * d_t + 1];
       unsigned char omega[2 * d_t];
+      #endif
 
       // Compute erasure locator polynomial
       memset(sigma, 0, 2 * d_t + 1);
