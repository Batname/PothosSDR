diff --git a/tmpl/volk_cpu.tmpl.c b/tmpl/volk_cpu.tmpl.c
index 091d573..32964f1 100644
--- a/tmpl/volk_cpu.tmpl.c
+++ b/tmpl/volk_cpu.tmpl.c
@@ -36,6 +36,7 @@ struct VOLK_CPU volk_cpu;
 #if defined(__GNUC__)
     #include <cpuid.h>
     #define cpuid_x86(op, r) __get_cpuid(op, (unsigned int *)r+0, (unsigned int *)r+1, (unsigned int *)r+2, (unsigned int *)r+3)
+    #define cpuidex_x86(op, cnt, r) __cpuid_count(op, cnt, (unsigned int *)r+0, (unsigned int *)r+1, (unsigned int *)r+2, (unsigned int *)r+3)
 
     /* Return Intel AVX extended CPU capabilities register.
      * This function will bomb on non-AVX-capable machines, so
@@ -56,6 +57,7 @@ struct VOLK_CPU volk_cpu;
 #elif defined(_MSC_VER) && defined(HAVE_INTRIN_H)
     #include <intrin.h>
     #define cpuid_x86(op, r) __cpuid(((int*)r), op)
+    #define cpuidex_x86(op, cnt, r) __cpuidex(((int*)r), op, cnt)
 
     #if defined(_XCR_XFEATURE_ENABLED_MASK)
     #define __xgetbv() _xgetbv(_XCR_XFEATURE_ENABLED_MASK)
@@ -72,7 +74,8 @@ struct VOLK_CPU volk_cpu;
 static inline unsigned int cpuid_count_x86_bit(unsigned int level, unsigned int count, unsigned int reg, unsigned int bit) {
 #if defined(VOLK_CPU_x86)
     unsigned int regs[4];
-    __cpuid_count(level, count, regs[0],  regs[1],  regs[2], regs[3]);
+    memset(regs, 0, sizeof(unsigned int)*4);
+    cpuidex_x86(level, count, regs);
     return regs[reg] >> bit & 0x01;
 #else
     return 0;
